// <auto-generated />
using System;
using EComm.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EComm.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251018235538_ProducandCategoryEnities")]
    partial class ProducandCategoryEnities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("EComm.Domain.Aggregates.CategoryAggregate.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationTime = new DateTime(2025, 10, 18, 23, 49, 21, 0, DateTimeKind.Utc),
                            Description = "Electronic Machines",
                            IsDeleted = false,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            CreationTime = new DateTime(2025, 10, 18, 23, 49, 21, 0, DateTimeKind.Utc),
                            Description = "Mix Books",
                            IsDeleted = false,
                            Name = "Books"
                        },
                        new
                        {
                            Id = 3,
                            CreationTime = new DateTime(2025, 10, 18, 23, 49, 21, 0, DateTimeKind.Utc),
                            Description = "Men and women Clothes",
                            IsDeleted = false,
                            Name = "Fashion"
                        });
                });

            modelBuilder.Entity("EComm.Domain.Aggregates.ProductAggregate.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Electronics",
                            CreationTime = new DateTime(2025, 10, 18, 23, 49, 21, 0, DateTimeKind.Utc),
                            Description = "Samsung Flagship",
                            ImageUrl = "Image1.PNG",
                            IsDeleted = false,
                            Name = "Samsung S25 Ultra",
                            Price = 1000m,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Books",
                            CreationTime = new DateTime(2025, 10, 18, 23, 49, 21, 0, DateTimeKind.Utc),
                            Description = "adventure Manga",
                            ImageUrl = "Image1.PNG",
                            IsDeleted = false,
                            Name = "Attack On Titan",
                            Price = 20m,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Fashion",
                            CreationTime = new DateTime(2025, 10, 18, 23, 49, 21, 0, DateTimeKind.Utc),
                            Description = "Sprot T-Shirt",
                            ImageUrl = "Image1.PNG",
                            IsDeleted = false,
                            Name = "Messi T-Shirt",
                            Price = 40m,
                            Quantity = 10
                        });
                });

            modelBuilder.Entity("EComm.Domain.Entities.WeatherForecast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Summary")
                        .HasColumnType("TEXT");

                    b.Property<int>("TemperatureC")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("WeatherForecasts");
                });
#pragma warning restore 612, 618
        }
    }
}
